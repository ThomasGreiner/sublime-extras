#!/bin/bash

usage() {
cat << EOF
Usage: $0 [-o <output-dir>] <syntax-name> <path-to-syntax>

OPTIONS:
  -o <output-dir>   Create and save result to specified directory
EOF
}

if [ $# -lt 2 ]; then
  usage
  exit 1
fi

this_dir=`dirname "${BASH_SOURCE}"`
sublime_dir="$HOME/.config/sublime-text-3/Packages/User"
vim_dir="$HOME/.vim"

while getopts ":o:" option; do
  case $option in
    o)
      sublime_dir="$OPTARG"
      vim_dir="$OPTARG"
      ;;
    ?)
      usage
      exit
      ;;
  esac
done

shift $((OPTIND-1))
syntax_name="$1"
syntax_dir="$2"

build_color_scheme() {
  if [ ! -e "${syntax_dir}/theme.yaml" ]; then
    return
  fi
  echo "Creating ${syntax_name}.tmTheme"
  if [ ! -e "${this_dir}/FreshCut.tmTheme" ]; then
    wget -O "${this_dir}/FreshCut.tmTheme" "https://raw.githubusercontent.com/daylerees/colour-schemes/master/legacy/FreshCut.tmTheme"
  fi
  ${this_dir}/yaml2plist.js "${syntax_dir}/theme.yaml" > "${syntax_name}.tmTheme"
  xsltproc -o "${syntax_name}.tmTheme" "${this_dir}/theme.xsl" "${syntax_name}.tmTheme"
}

build_syntax() {
  if [ ! -e "${syntax_dir}/language.yaml" ]; then
    return
  fi
  echo "Creating ${syntax_name}.tmLanguage"
  ${this_dir}/yaml2plist.js "${syntax_dir}/language.yaml" > "${syntax_name}.tmLanguage"
}

deploy() {
  if [ -e "$2" ];then
    echo "Deploying $3"
    mkdir -p `dirname $3`
    $1 "$2" "$3"
  fi
}

# Sublime Text
build_color_scheme
build_syntax
deploy cp "${syntax_dir}/settings.json" "${sublime_dir}/${syntax_name}.sublime-settings"
deploy mv "${syntax_name}.tmTheme" "${sublime_dir}/${syntax_name}.tmTheme"
deploy mv "${syntax_name}.tmLanguage" "${sublime_dir}/${syntax_name}.tmLanguage"

# VIM
deploy cp "${syntax_dir}/syntax.vim" "${vim_dir}/syntax/${syntax_name}.vim"
deploy cp "${syntax_dir}/ftdetect.vim" "${vim_dir}/ftdetect/${syntax_name}.vim"
